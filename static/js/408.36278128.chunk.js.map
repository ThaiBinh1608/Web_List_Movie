{"version":3,"file":"static/js/408.36278128.chunk.js","mappings":"iJA8BA,IAzBkB,SAAH,GAAkB,IAAZA,EAAI,EAAJA,KACXC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,aAAcC,EAAkCH,EAAlCG,aAAcC,EAAoBJ,EAApBI,YAAaC,EAAOL,EAAPK,GAClDC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAKC,UAAU,qFAAoF,WACjG,gBACEC,IAAKC,EAAAA,GAAAA,SAAiBN,GACtBO,IAAI,GACJH,UAAU,mDAEZ,iBAAKA,UAAU,uBAAsB,WAErC,eAAIA,UAAU,0BAAyB,SAAEP,KAEzC,iBAAKO,UAAU,qDAAoD,WACjE,0BAAO,IAAII,KAAKT,GAAcU,iBAC9B,0BAAOX,QAET,SAAC,IAAM,CAACY,QAAS,kBAAMR,EAAS,UAAD,OAAWD,GAAK,EAAC,SAAC,kBAIvD,C,iHC2DA,UA/EmB,WAKf,OAA8BU,EAAAA,EAAAA,UAAS,GAAE,eAAlCC,EAAQ,KAACC,EAAW,KAC3B,GAA2BF,EAAAA,EAAAA,UAAS,IAAG,eAAhCG,EAAM,KAAEC,EAAS,KACxB,GAAsBJ,EAAAA,EAAAA,UAASL,EAAAA,GAAAA,aAAqB,UAAUM,IAAU,eAAjEI,EAAG,KAAEC,EAAM,KACZC,GAAiBC,EAAAA,EAAAA,GAAYL,EAAO,KAC1C,GAAkCH,EAAAA,EAAAA,UAAS,GAAE,eAAtCS,EAAS,KAAEC,EAAY,KAC9B,GAAoCV,EAAAA,EAAAA,UAAS,GAAE,eAAxCW,EAAU,KAAEC,EAAa,KAIhC,GAAwBC,EAAAA,EAAAA,IAAOR,EAAKS,EAAAA,IAA5BC,EAAI,EAAJA,KAAOC,EAAK,EAALA,MACTC,GAAa,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,UAAW,IAChCC,EAAAA,EAAAA,YAAU,WACHJ,GAASA,EAAKK,eACnBV,EAAaW,KAAKC,KAAKP,EAAKK,cAnBf,IAoBf,GAAG,CAACL,EAAMJ,IACV,IAKMY,GAAWR,IAASC,EAa1B,OAZAG,EAAAA,EAAAA,YAAU,WAEFb,EADDC,EACQZ,EAAAA,GAAAA,eAAuBY,EAAeN,GAEtCN,EAAAA,GAAAA,aAAqB,UAAUM,GAG9C,GAAE,CAACM,EAAeN,KAMd,iBAAKR,UAAU,uBAAsB,WACrC,iBAAKA,UAAU,aAAY,WACvB,gBAAKA,UAAU,SAAQ,UACnB,kBAAO+B,KAAK,OAAO/B,UAAW,kDAAkDgC,YAAY,kBACxFC,SAhCW,SAACC,GACxBvB,EAAUuB,EAAMC,OAAOC,MAC3B,OAkCQ,mBAAQpC,UAAU,4BAA2B,UAC7C,gBAAKqC,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAAYC,YAAY,MAAMC,OAAO,eAAezC,UAAU,UAAS,UACnI,iBAAM0C,cAAc,QAAQC,eAAe,QAAQC,EAAE,sFAKxDd,IAAY,gBAAK9B,UAAU,kGAE1B,gBAAKA,UAAU,0BAAyB,UAEtC8B,GACAN,EAAOqB,OAAS,GAChBrB,EAAOsB,KAAI,SAACtD,GAAI,OACd,SAAC,IAAS,CAAeA,KAAMA,GAAfA,EAAKK,GAA4B,OAGzD,gBAAKG,UAAU,QAAO,UACpB,SAAC,IAAa,CACZ+C,WAAW,MACXC,UAAU,SACVC,aAhDkB,SAACf,GACvB,IAAMgB,EAtBO,GAsBMhB,EAAMiB,SAA2B7B,EAAKK,cACzDR,EAAc+B,GACdzC,EAAYyB,EAAMiB,SAAW,EAC/B,EA6CMC,mBAAoB,EACpBpC,UAAWA,EACXqC,cAAc,aACdC,sBAAuB,KACvBtD,UAAU,mBAKpB,C","sources":["components/movie/MovieCard.js","pages/MoviesPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tmdbAPI } from \"../../config\";\r\nimport Button from \"../button/Button\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const { title, vote_average, release_date, poster_path, id } = item;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"movie-card flex flex-col h-full rounded-lg p-3 bg-slate-800 text-white select-none\">\r\n      <img\r\n        src={tmdbAPI.image500(poster_path)}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5\"\r\n      />\r\n      <div className=\"flex flex-col flex-1\">\r\n\r\n      <h3 className=\"text-2xl font-bold mb-3\">{title}</h3>\r\n\r\n      <div className=\"flex items-center justify-between opacity-50 mb-10\">\r\n        <span>{new Date(release_date).getFullYear()}</span>\r\n        <span>{vote_average}</span>\r\n      </div>\r\n      <Button onClick={() => navigate(`/movie/${id}`)}>Xem ngay</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useSWR from \"swr\";\r\nimport {fetcher, tmdbAPI} from \"../config\"\r\nimport MovieCard from '../components/movie/MovieCard';\r\nimport useDebounce from '../hooks/useDebounce';\r\nimport ReactPaginate from \"react-paginate\";\r\n//https://api.themoviedb.org/3/search/movie?api_key=\r\nconst itemsPerPage=20;\r\nconst MoviesPage = () => {\r\n\r\n \r\n   \r\n\r\n    const [nextPage,setNextPage] =useState(1)\r\n    const [filter, setFilter] =useState(\"\");\r\n    const [url, setUrl] = useState(tmdbAPI.getMovieList(\"popular\",nextPage));\r\n    const filterDebounce = useDebounce(filter,500);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value);\r\n    }\r\n    const { data , error} = useSWR(url, fetcher);\r\n    const movies = data?.results || [];\r\n    useEffect(() => {\r\n      if (!data || !data.total_results) return;\r\n      setPageCount(Math.ceil(data.total_results / itemsPerPage));\r\n    }, [data, itemOffset]);\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % data.total_results;\r\n      setItemOffset(newOffset);\r\n      setNextPage(event.selected + 1);\r\n    };\r\n    const loading = !data && !error;\r\n    useEffect(() => {\r\n        if(filterDebounce) {\r\n            setUrl(tmdbAPI.getMovieSearch(filterDebounce,nextPage));\r\n        }else {\r\n            setUrl(tmdbAPI.getMovieList(\"popular\",nextPage))\r\n        }\r\n        \r\n    },[filterDebounce,nextPage]);\r\n\r\n   \r\n    \r\n      \r\n    return (\r\n        <div className='py-10 page-container'>\r\n        <div className=\"flex mb-10\">\r\n            <div className=\"flex-1\">\r\n                <input type=\"text\" className= \"w-full p-4 bg-slate-700 text-white outline-none\" placeholder=\"Search movie...\"\r\n                    onChange={handleFilterChange}\r\n                />\r\n\r\n            </div>\r\n            <button className='p-4 bg-primary text-white'>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z\" />\r\n            </svg>\r\n\r\n            </button>\r\n        </div>\r\n        {loading && (<div className='w-10 h-10 rounded-full border-primary border-t-transparent border-t-4\r\n        mx-auto animate-spin'></div>) }\r\n          <div className=\"grid grid-cols-4 gap-10\">\r\n\r\n          {!loading &&\r\n            movies.length > 0 &&\r\n            movies.map((item) => (\r\n              <MovieCard key={item.id} item={item}></MovieCard>\r\n            ))}\r\n      </div>\r\n      <div className=\"mt-10\">\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"< previous\"\r\n          renderOnZeroPageCount={null}\r\n          className=\"pagination\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MoviesPage;"],"names":["item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","className","src","tmdbAPI","alt","Date","getFullYear","onClick","useState","nextPage","setNextPage","filter","setFilter","url","setUrl","filterDebounce","useDebounce","pageCount","setPageCount","itemOffset","setItemOffset","useSWR","fetcher","data","error","movies","results","useEffect","total_results","Math","ceil","loading","type","placeholder","onChange","event","target","value","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","length","map","breakLabel","nextLabel","onPageChange","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount"],"sourceRoot":""}