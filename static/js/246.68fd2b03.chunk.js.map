{"version":3,"file":"static/js/246.68fd2b03.chunk.js","mappings":"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","sources":["components/movie/MovieCard.js","pages/MoviesDetailsPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { tmdbAPI } from \"../../config\";\r\nimport Button from \"../button/Button\";\r\n\r\nconst MovieCard = ({ item }) => {\r\n  const { title, vote_average, release_date, poster_path, id } = item;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"movie-card flex flex-col h-full rounded-lg p-3 bg-slate-800 text-white select-none\">\r\n      <img\r\n        src={tmdbAPI.image500(poster_path)}\r\n        alt=\"\"\r\n        className=\"w-full h-[250px] object-cover rounded-lg mb-5\"\r\n      />\r\n      <div className=\"flex flex-col flex-1\">\r\n\r\n      <h3 className=\"text-2xl font-bold mb-3\">{title}</h3>\r\n\r\n      <div className=\"flex items-center justify-between opacity-50 mb-10\">\r\n        <span>{new Date(release_date).getFullYear()}</span>\r\n        <span>{vote_average}</span>\r\n      </div>\r\n      <Button onClick={() => navigate(`/movie/${id}`)}>Xem ngay</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport useSWR from \"swr\";\r\nimport { fetcher, tmdbAPI } from \"../config\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport MovieCard from \"../components/movie/MovieCard\";\r\n//https:api.themoviedb.org/3/movie/{movie_id}?api_key=ccd2fb4b6c71b6649a8e1b8c8338a19\r\nconst MoviesDetailsPage = () => {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieDetails(movieId), fetcher);\r\n\r\n  console.log(data);\r\n  if (!data) return null;\r\n  const { backdrop_path, poster_path, title, genres, overview } = data;\r\n  return (\r\n    <div className=\"pb-10\">\r\n      <div className=\"w-full h-[600px] relative \">\r\n        <div className=\"absolute inset-0 bg-black bg-opacity-70\"></div>\r\n        <div\r\n          className=\"w-full h-full bg-cover bg-no-repeat\"\r\n          style={{\r\n            backgroundImage: `url(${tmdbAPI.imageOriginal(backdrop_path)})`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      <div className=\"w-full h-[400px] max-w-[800px] mx-auto -mt-[200px] relative z-10 pb-10\">\r\n        <img\r\n          src={tmdbAPI.imageOriginal(poster_path)}\r\n          className=\"w-full h-full object-cover rounded-xl\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <h1 className=\"text-center text-4xl font-bold text-white mb-10\">\r\n        {title}\r\n      </h1>\r\n      {genres.length > 0 && (\r\n        <div className=\"flex items-center justify-center gap-x-5 mb-10\">\r\n          {genres.map((item) => (\r\n            <span\r\n              className=\"py-2 px-4 border-primary text-primary border rounded\"\r\n              key={item.id}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <p className=\"text-center leading-relaxed max-w-[600px] mx-auto mb-10\">\r\n        {overview}\r\n      </p>\r\n      <MovieCredits></MovieCredits>\r\n      <MovieVideo></MovieVideo>\r\n      <MovieSimilar></MovieSimilar>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction MovieCredits() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"credits\"), fetcher);\r\n  //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=\r\n  if (!data) return null;\r\n  const { cast } = data;\r\n  if (!cast || cast.lenght <= 0) return null;\r\n  return (\r\n    <div className=\"py-10\">\r\n      <h2 className=\"text-center text-3xl mb-10\">Diễn viên </h2>\r\n      <div className=\"grid grid-cols-4 gap-5\">\r\n        {cast.slice(0, 4).map((item) => (\r\n          <div className=\"cast-item p-3\" key={item.id}>\r\n            <img\r\n              className=\"w-full h-[350px] object-cover rounded-lg mb-3 \"\r\n              src={tmdbAPI.imageOriginal(item.profile_path)}\r\n              alt=\"\"\r\n            />\r\n            <h3 className=\" text-center text-xl font-medium\">{item.name}</h3>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MovieVideo() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"videos\"), fetcher);\r\n  if (!data) return null;\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) return null;\r\n\r\n  return (\r\n    <div className=\"p-10\">\r\n      <div className=\"flex flex-col gap-5\">\r\n        {results.slice(0, 1).map((item) => (\r\n          <div className=\"\" key={item.id}>\r\n            <h3 className=\"mb-5 text-xl font-medium p-3 bg-primary inline-block\">\r\n              Trailer Phim\r\n            </h3>\r\n            <div key={item.id} className=\"w-full aspect-video\">\r\n              <iframe\r\n                width=\"900\"\r\n                height=\"506\"\r\n                src={`https://www.youtube.com/embed/${item.key}`}\r\n                title=\"Youtube\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                allowFullScreen\r\n                className=\"w-full h-full object-fill\"\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MovieSimilar() {\r\n  const { movieId } = useParams();\r\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"similar\"), fetcher);\r\n  //https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=\r\n  if (!data) return null;\r\n  const { results } = data;\r\n  if (!results || results.length <= 0) return null;\r\n  return (\r\n    <div className=\"py-10\">\r\n      <h2 className=\"text-3xl font-medium mb-5\">Phim cùng thể loại </h2>\r\n      <div className=\"movie-list\">\r\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\r\n          {results.length > 0 &&\r\n            results.map((item) => (\r\n              <SwiperSlide key={item.id}>\r\n                <MovieCard item={item}></MovieCard>\r\n              </SwiperSlide>\r\n            ))}\r\n        </Swiper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesDetailsPage;\r\n"],"names":["item","title","vote_average","release_date","poster_path","id","navigate","useNavigate","className","src","tmdbAPI","alt","Date","getFullYear","onClick","MovieCredits","movieId","useParams","data","useSWR","fetcher","cast","lenght","slice","map","profile_path","name","MovieVideo","results","length","width","height","key","frameBorder","allow","allowFullScreen","MovieSimilar","grabCursor","spaceBetween","slidesPerView","console","log","backdrop_path","genres","overview","style","backgroundImage"],"sourceRoot":""}